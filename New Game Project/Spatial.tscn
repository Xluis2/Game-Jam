[gd_scene load_steps=6 format=2]

[ext_resource path="res://FPS.tscn" type="PackedScene" id=1]

[sub_resource type="SpatialMaterial" id=1]
render_priority = 2
flags_transparent = true
albedo_color = Color( 0.294118, 0.596078, 0.32549, 1 )

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode specular_phong;//, unshaded;


uniform float speed : hint_range(-1, 1) = 0.0;

//colors
uniform sampler2D noise1;
uniform sampler2D noise2;
uniform sampler2D normalmap : hint_normal;

uniform vec4 color : hint_color;
uniform vec4 edge_color : hint_color;


void vertex() {
// Output:0

}

void fragment() {
	 float time = TIME * speed;
	
	vec3 n1 = texture(noise1, UV + time).rgb;
	vec3 n2 = texture(noise2, UV - time).rgb;
	
	float sum = (n1.r + n2.r) -1f;
	
	ALBEDO = vec3(sum);
	
	float fin = 0.0;
	if (sum > 0.0 && sum < 0.4) fin = 0.1;
	if (sum > 0.4 && sum < 0.8) fin = 0.0;
	if 
	
}

void light() {
// Output:0

}
"

[sub_resource type="ShaderMaterial" id=9]
render_priority = -3
shader = SubResource( 2 )

[sub_resource type="PlaneMesh" id=10]
material = SubResource( 9 )
size = Vector2( 300, 300 )

[node name="Spatial" type="Spatial"]

[node name="CSGBox" type="CSGBox" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.90735e-06, 0 )
use_collision = true
width = 14.0
height = 2.11993
depth = 12.0
material = SubResource( 1 )

[node name="FPS" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.60436, 3.60101, -3.07732 )

[node name="Water" type="Spatial" parent="."]

[node name="MeshInstance" type="MeshInstance" parent="Water"]
mesh = SubResource( 10 )
material/0 = null
